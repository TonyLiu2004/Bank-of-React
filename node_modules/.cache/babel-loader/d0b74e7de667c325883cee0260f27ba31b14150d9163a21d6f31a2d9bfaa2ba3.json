{"ast":null,"code":"/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/import React,{Component,useState}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';import axios from'axios';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import NavBar from'./components/NavBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){// Create and initialize state\nsuper();// Update state's currentUser (userName) after \"Log In\" button is clicked\nthis.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.addCredit=credit=>{this.setState({creditList:credit});this.state.accountBalance+=credit[credit.length-1].amount;};this.addDebit=debit=>{this.setState({debitList:debit});this.state.accountBalance-=debit[debit.length-1].amount;};this.calculateBalance=()=>{let balance=this.state.accountBalance;this.state.creditList.forEach(credit=>{console.log(credit);balance+=credit.amount;});this.state.debitList.forEach(debit=>{balance-=debit.amount;});console.log(balance);this.setState({accountBalance:balance});};this.state={accountBalance:10000.00,creditList:[],debitList:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}componentDidMount(){axios.get('https://johnnylaicode.github.io/api/credits.json').then(response=>{this.setState({creditList:response.data},()=>{this.calculateBalance();});}).catch(error=>{console.error(error);});axios.get('https://johnnylaicode.github.io/api/debits.json').then(response=>{this.setState({debitList:response.data},()=>{this.calculateBalance();});}).catch(error=>{console.error(error);});}// Create Routes and React elements to be rendered using React components\nrender(){// Create React elements and pass input props to components\nconst HomeComponent=()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance});const UserProfileComponent=()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince});const LogInComponent=()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn});const CreditsComponent=()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.creditList,updateCredits:this.addCredit});const DebitsComponent=()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debitList,updateDebits:this.addDebit});// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\nreturn/*#__PURE__*/_jsxs(Router,{basename:\"/bank-of-react\",children:[/*#__PURE__*/_jsx(NavBar,{accountBalance:this.state.accountBalance}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:HomeComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:UserProfileComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:LogInComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:CreditsComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:DebitsComponent})]})]});}}export default App;","map":{"version":3,"names":["React","Component","useState","BrowserRouter","Router","Route","axios","Home","UserProfile","LogIn","Credits","Debits","NavBar","jsx","_jsx","jsxs","_jsxs","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","creditList","accountBalance","length","amount","addDebit","debit","debitList","calculateBalance","balance","forEach","console","log","memberSince","componentDidMount","get","then","response","data","catch","error","render","HomeComponent","UserProfileComponent","LogInComponent","user","CreditsComponent","credits","updateCredits","DebitsComponent","debits","updateDebits","basename","children","exact","path"],"sources":["C:/Users/incre/OneDrive/Documents/Bank-of-React/src/App.js"],"sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component, useState} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\nimport NavBar from './components/NavBar'\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 10000.00,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get('https://johnnylaicode.github.io/api/credits.json')\r\n    .then(response => {\r\n      this.setState({ creditList: response.data }, () => {\r\n        this.calculateBalance();\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n\r\n    axios.get('https://johnnylaicode.github.io/api/debits.json')\r\n    .then(response => {\r\n      this.setState({ debitList: response.data }, () => {\r\n        this.calculateBalance();\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    this.setState({creditList: credit});\r\n    this.state.accountBalance += credit[credit.length -1].amount;\r\n  }\r\n\r\n  addDebit = (debit) => {\r\n    this.setState({debitList: debit});\r\n    this.state.accountBalance -= debit[debit.length -1].amount;\r\n  }\r\n\r\n  calculateBalance = () => {\r\n    let balance = this.state.accountBalance;\r\n    this.state.creditList.forEach(credit => {\r\n      console.log(credit);\r\n      balance += credit.amount;\r\n    });\r\n    this.state.debitList.forEach(debit => {\r\n      balance -= debit.amount;\r\n    });\r\n    console.log(balance);\r\n    this.setState({accountBalance: balance});\r\n  }\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} updateCredits={this.addCredit} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} updateDebits={this.addDebit}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react\">\r\n        <NavBar accountBalance={this.state.accountBalance} />\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}