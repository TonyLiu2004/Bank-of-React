{"ast":null,"code":"/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/import React,{Component}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import NavBar from'./components/NavBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){// Create and initialize state\nsuper();this.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.addCredit=credit=>{this.setState({creditList:credit});this.calculateBalance();};this.calculateBalance=()=>{let balance=this.state.accountBalance;this.state.creditList.forEach(credit=>{balance+=credit.amount;});this.state.debitList.forEach(debit=>{balance-=debit.amount;});this.setState({accountBalance:balance});};this.state={accountBalance:1234567.89,creditList:[{name:\"Shoes\",amount:120.00},{name:\"Shopping\",amount:100.00}],debitList:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}componentDidMount(){this.calculateBalance();}// Update state's currentUser (userName) after \"Log In\" button is clicked\n// Create Routes and React elements to be rendered using React components\nrender(){// Create React elements and pass input props to components\nconst HomeComponent=()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance});const UserProfileComponent=()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince});const LogInComponent=()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn});const CreditsComponent=()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.creditList,updateCredits:this.addCredit});const DebitsComponent=()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debitList});// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\nreturn/*#__PURE__*/_jsxs(Router,{basename:\"/bank-of-react-Tony-Liu\",children:[/*#__PURE__*/_jsx(NavBar,{accountBalance:this.state.accountBalance}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:HomeComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:UserProfileComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:LogInComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:CreditsComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:DebitsComponent})]})]});}}export default App;","map":{"version":3,"sources":["C:/Users/incre/OneDrive/Documents/Bank-of-React/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","NavBar","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","creditList","calculateBalance","balance","accountBalance","forEach","amount","debitList","debit","name","memberSince","componentDidMount","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\nimport NavBar from './components/NavBar'\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [{name:\"Shoes\", amount:120.00},{name:\"Shopping\", amount:100.00}],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateBalance();\r\n  }\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    this.setState({creditList: credit});\r\n    this.calculateBalance();\r\n  }\r\n\r\n  calculateBalance = () => {\r\n    let balance = this.state.accountBalance;\r\n    this.state.creditList.forEach(credit => {\r\n      balance += credit.amount;\r\n    });\r\n    this.state.debitList.forEach(debit => {\r\n      balance -= debit.amount;\r\n    });\r\n    this.setState({accountBalance: balance});\r\n  }\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} updateCredits={this.addCredit} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-Tony-Liu\">\r\n        <NavBar accountBalance={this.state.accountBalance} />\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}